<%= tinymce %>
<div class="container" class="col-sm-3 control-label">
	<br></br>
	<br></br>
	<%= form_for :trip, :url => trip_path(@trip), :method=> :put,:html => {:class =>"form-horizontal",:id =>"event_form"} do |f| %>
	<%= f.text_field :title,:class =>"form-control", :id=>"title_name",:placeholder => "Title" %>
	<br></br>
	<%= f.text_area :description,:size=> "50x7",:class =>"form-control", :id=>"venue_name",:placeholder => "Description" %>
	<br></br>

	<label for="inputstatus">Display pic</label>
	<div class="form-group">
		<div class="col-sm-3">
			<div class="event-title">
				<%= image_tag "trip1.jpg", :alt=>"image", :class=>"img-thumbnail", :id => "preview" %>
			</div>
		</div>
		<div class="col-sm-3">
			<%= f.file_field :main_image, :id=>"exampleInputFile" %>
		</div>
		<div class="col-sm-2"></div>
	</div>
	<br></br>
	<br></br>
	<h1>Story route</h1>

	<div class="row route-ml">
		<div class=" row col-md-6 form-horizontal" id="calculate-route">
			<%= f.text_field :from_address, :id=>'from', :class =>"form-control", :required=> true, :placeholder=>"From address", :onfocus=>"geolocate()"%>
			<a id="from-link" href="#">Get my position</a>
			<br></br>
			<br></br>

			<%= f.text_field :to_address, :id=>'to', :class =>"form-control", :required=>true, :placeholder=>"To address" %>
			<a id="to-link" href="#">Get my position</a>
			<br></br>
			<br></br>

			<button class= "btn btn-primary ok-btn-padding" id="calculateRoute" >Check Route </button>
			<button type="reset" class="btn btn-warning ok-btn-padding">Reset</button>
			<br></br>
			<br></br>
		</div>

		<div class="col-md-6 map-style">
			<div id="map"></div>
			<p id="error"></p>
		</div>
	</div>


	<%= f.text_area :content ,:rows=>"number" ,:class=>"tinymce" ,:rows=>"40" ,:cols=>"120",:placeholder => "What is your story"%>
	<br></br>
	<%= f.submit "OK", :class=>"btn btn-primary ok-btn-padding" %>
	<button type="button" class="btn btn-default ok-btn-padding" data-dismiss="modal">Cancel</button>
	<%end%>
	<br></br>
	<br></br>
</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
<script src="https://maps.googleapis.com/maps/api/js?libraries=places&callback=initMap" async defer></script>
<script>


	function initMap() {
		var map = new google.maps.Map(document.getElementById('map'),{
			center: {lat: 20.5937, lng: 78.9629},
			zoom: 4
		});
		var input = /** @type {!HTMLInputElement} */(
			document.getElementById('from'));

		var autocomplete = new google.maps.places.Autocomplete(input);
		autocomplete.bindTo('bounds', map);
	}

	function calculateRoute(from, to) {
        // Center initialized to Naples, Italy
        var myOptions = {
        	zoom: 10,
        	center: new google.maps.LatLng(20.5937, 78.9629),
        	mapTypeId: google.maps.MapTypeId.ROADMAP
        };
        // Draw the map
        var mapObject = new google.maps.Map(document.getElementById("map"), myOptions);

        var directionsService = new google.maps.DirectionsService();
        var directionsRequest = {
        	origin: from,
        	destination: to,
        	travelMode: google.maps.DirectionsTravelMode.DRIVING,
        	unitSystem: google.maps.UnitSystem.METRIC
        };
        directionsService.route(
        	directionsRequest,
        	function(response, status)
        	{
        		if (status == google.maps.DirectionsStatus.OK)
        		{
        			new google.maps.DirectionsRenderer({
        				map: mapObject,
        				directions: response
        			});
        		}
        		else
        			$("#error").append("Unable to retrieve your route<br />");
        	}
        	);
      }

      $(document).ready(function() {
        // If the browser supports the Geolocation API
        if (typeof navigator.geolocation == "undefined") {
        	$("#error").text("Your browser doesn't support the Geolocation API");
        	return;
        }

        $("#from-link, #to-link").click(function(event) {
        	event.preventDefault();
        	var addressId = this.id.substring(0, this.id.indexOf("-"));

        	navigator.geolocation.getCurrentPosition(function(position) {
        		var geocoder = new google.maps.Geocoder();
        		geocoder.geocode({
        			"location": new google.maps.LatLng(position.coords.latitude, position.coords.longitude)
        		},
        		function(results, status) {
        			if (status == google.maps.GeocoderStatus.OK)
        				$("#" + addressId).val(results[0].formatted_address);
        			else
        				$("#error").append("Unable to retrieve your address<br />");
        		});
        	},
        	function(positionError){
        		$("#error").append("Error: " + positionError.message + "<br />");
        	},
        	{
        		enableHighAccuracy: true,
            timeout: 10 * 1000 // 10 seconds
          });
        });

        $("#calculateRoute").click(function(event) {
        	event.preventDefault();
        	calculateRoute($("#from").val(), $("#to").val());
        });
      });

    </script>
    <style type="text/css">
    	#map {
    		width: 500px;
    		height: 400px;
    		margin-top: 10px;
    	}
    </style>
